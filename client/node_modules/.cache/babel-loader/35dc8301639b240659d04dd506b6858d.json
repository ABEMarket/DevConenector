{"ast":null,"code":"import api from \"../utils/api\";\nimport axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL //USER_LOADED,\n//AUTH_ERROR,\n//LOGIN_SUCCESS,\n//LOGIN_FAIL,\n//LOGOUT\n} from \"./types\"; // Register User\n\nexport const register = formData => async dispatch => {\n  try {\n    const res = await api.post(\"/users\", formData);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/Users/weiwang/Desktop/react study1/client/src/actions/auth.js"],"names":["api","axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","register","formData","dispatch","res","post","type","payload","data","loadUser","err","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,SAAzB;AACA,SACEC,gBADF,EAEEC,aAFF,CAGE;AACA;AACA;AACA;AACA;AAPF,OAQO,SARP,C,CAUA;;AACA,OAAO,MAAMC,QAAQ,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AACxD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMR,GAAG,CAACS,IAAJ,CAAS,QAAT,EAAmBH,QAAnB,CAAlB;AAEAC,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEP,gBADC;AAEPQ,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAIAL,IAAAA,QAAQ,CAACM,QAAQ,EAAT,CAAR;AACD,GARD,CAQE,OAAOC,GAAP,EAAY;AACZ,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBG,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAgBC,KAAD,IAAWX,QAAQ,CAACL,QAAQ,CAACgB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAlC;AACD;;AAEDZ,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN;AADC,KAAD,CAAR;AAGD;AACF,CApBM","sourcesContent":["import api from \"../utils/api\";\nimport axios from \"axios\";\n\nimport { setAlert } from \"./alert\";\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  //USER_LOADED,\n  //AUTH_ERROR,\n  //LOGIN_SUCCESS,\n  //LOGIN_FAIL,\n  //LOGOUT\n} from \"./types\";\n\n// Register User\nexport const register = (formData) => async (dispatch) => {\n  try {\n    const res = await api.post(\"/users\", formData);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}