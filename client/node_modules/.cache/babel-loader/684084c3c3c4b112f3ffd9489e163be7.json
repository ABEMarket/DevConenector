{"ast":null,"code":"import { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST //ADD_POST,\n//GET_POST,\n// ADD_COMMENT,\n//REMOVE_COMMENT\n} from \"../actions/types\";\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        post: payload,\n        loading: false\n      };\n\n    /*case ADD_POST:\n        return {\n          ...state,\n          posts: [payload, ...state.posts],\n          loading: false\n        };*/\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    /* case UPDATE_LIKES:\n        return {\n          ...state,\n          posts: state.posts.map(post =>\n            post._id === payload.id ? { ...post, likes: payload.likes } : post\n          ),\n          loading: false\n        };\n      /*case ADD_COMMENT:\n        return {\n          ...state,\n          post: { ...state.post, comments: payload },\n          loading: false\n        };\n      case REMOVE_COMMENT:\n        return {\n          ...state,\n          post: {\n            ...state.post,\n            comments: state.post.comments.filter(\n              comment => comment._id !== payload\n            )\n          },\n          loading: false\n        };*/\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/weiwang/Desktop/react study1/client/src/reducers/post.js"],"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","initialState","posts","post","loading","error","state","action","type","payload","filter","_id"],"mappings":"AAAA,SACEA,SADF,EAEEC,UAFF,EAGEC,YAHF,EAIEC,WAJF,CAKE;AACA;AACA;AACA;AARF,OASO,kBATP;AAWA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGL,YAAlB,EAAgCM,MAAhC,EAAwC;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKX,SAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,KAAK,EAAEO,OAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKN,UAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,IAAI,EAAEM,OAFD;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF;;;;;;;AAMA,SAAKJ,WAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAoBP,IAAD,IAAUA,IAAI,CAACQ,GAAL,KAAaF,OAA1C,CAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKN,UAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELD,QAAAA,KAAK,EAAEI,OAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACE,aAAOE,KAAP;AAzDJ;AA2DD","sourcesContent":["import {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  //ADD_POST,\n  //GET_POST,\n  // ADD_COMMENT,\n  //REMOVE_COMMENT\n} from \"../actions/types\";\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false,\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        post: payload,\n        loading: false,\n      };\n    /*case ADD_POST:\n        return {\n          ...state,\n          posts: [payload, ...state.posts],\n          loading: false\n        };*/\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== payload),\n        loading: false,\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    /* case UPDATE_LIKES:\n        return {\n          ...state,\n          posts: state.posts.map(post =>\n            post._id === payload.id ? { ...post, likes: payload.likes } : post\n          ),\n          loading: false\n        };\n      /*case ADD_COMMENT:\n        return {\n          ...state,\n          post: { ...state.post, comments: payload },\n          loading: false\n        };\n      case REMOVE_COMMENT:\n        return {\n          ...state,\n          post: {\n            ...state.post,\n            comments: state.post.comments.filter(\n              comment => comment._id !== payload\n            )\n          },\n          loading: false\n        };*/\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}