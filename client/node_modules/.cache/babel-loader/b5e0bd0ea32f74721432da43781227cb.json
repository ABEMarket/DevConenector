{"ast":null,"code":"import axios from \"axios\"; //import { setAlert } from './alert'\n\nimport { GET_PROFILE //GET_PROFILES,\n, PROFILE_ERROR //UPDATE_PROFILE,\n//CLEAR_PROFILE,\n// ACCOUNT_DELETED,\n//GET_REPOS,\n// NO_REPOS\n} from \"./types\"; // Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get all profiles\n\n/*export const getProfiles = () => async dispatch => {\n  dispatch({ type: CLEAR_PROFILE });\n\n  try {\n    const res = await api.get('/profile');\n\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};*/\n// Create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      eaders: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post(\"/api/profile\", formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\"));\n\n    if (!edit) {\n      history.push(\"/dashboard\");\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/weiwang/Desktop/react study1/client/src/actions/profile.js"],"names":["axios","GET_PROFILE","PROFILE_ERROR","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","createProfile","formData","history","edit","config","eaders","post","setAlert","push","errors","forEach","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,SACEC,WADF,CAEE;AAFF,EAGEC,aAHF,CAIE;AACA;AACA;AACA;AACA;AARF,OASO,SATP,C,CAWA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACzD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,GAAN,CAAU,iBAAV,CAAlB;AAEAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,WADC;AAEPO,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEL,aADC;AAEPM,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAdM,C,CAgBP;;AACA;;;;;;;;;;;;;;;;;AAkBA;;AACA,OAAO,MAAMC,aAAa,GAAG,CAACC,QAAD,EAAWC,OAAX,EAAoBC,IAAI,GAAG,KAA3B,KAAqC,MAChEd,QADgE,IAE7D;AACH,MAAI;AACF,UAAMe,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAE;AACN,wBAAgB;AADV;AADK,KAAf;AAMA,UAAMf,GAAG,GAAG,MAAML,KAAK,CAACqB,IAAN,CAAW,cAAX,EAA2BL,QAA3B,EAAqCG,MAArC,CAAlB;AAEAf,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,WADC;AAEPO,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAKAL,IAAAA,QAAQ,CAACkB,QAAQ,CAACJ,IAAI,GAAG,iBAAH,GAAuB,iBAA5B,CAAT,CAAR;;AAEA,QAAI,CAACA,IAAL,EAAW;AACTD,MAAAA,OAAO,CAACM,IAAR,CAAa,YAAb;AACD;AACF,GAnBD,CAmBE,OAAOb,GAAP,EAAY;AACZ,UAAMc,MAAM,GAAGd,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBe,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACC,OAAP,CAAgBC,KAAD,IAAWtB,QAAQ,CAACkB,QAAQ,CAACI,KAAK,CAACf,GAAP,EAAY,QAAZ,CAAT,CAAlC;AACD;;AAEDP,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEL,aADC;AAEPM,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAlCM","sourcesContent":["import axios from \"axios\";\n//import { setAlert } from './alert'\n\nimport {\n  GET_PROFILE,\n  //GET_PROFILES,\n  PROFILE_ERROR,\n  //UPDATE_PROFILE,\n  //CLEAR_PROFILE,\n  // ACCOUNT_DELETED,\n  //GET_REPOS,\n  // NO_REPOS\n} from \"./types\";\n\n// Get current users profile\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get all profiles\n/*export const getProfiles = () => async dispatch => {\n  dispatch({ type: CLEAR_PROFILE });\n\n  try {\n    const res = await api.get('/profile');\n\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};*/\n\n// Create or update profile\nexport const createProfile = (formData, history, edit = false) => async (\n  dispatch\n) => {\n  try {\n    const config = {\n      eaders: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const res = await axios.post(\"/api/profile\", formData, config);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\"));\n\n    if (!edit) {\n      history.push(\"/dashboard\");\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}